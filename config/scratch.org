#+title: Nore Emacs: Org *scratch*
#+author: Nore Emacs


* scratch
	:PROPERTIES:
	:CUSTOM_ID: scratch
	:END:

** Quote
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-quote
	 :END:
	 
#+BEGIN_QUOTE
Everything should be made as simple as possible,
but not any simpler. -- Albert Einstein
#+END_QUOTE

** Example
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-example
	 :END:

#+BEGIN_EXAMPLE
For example, it's an example.
#+END_EXAMPLE

** Verse
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-verse
	 :END:
	 
#+BEGIN_VERSE
千山鸟飞绝，万径人踪灭。
孤舟蓑笠翁，独钓寒江雪。
  -- 柳宗元 《江雪》
#+END_VERSE

** Style
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-style
	 :END:

The quick /brown/ *fox* =jumps= +over+ the lazy *dog*.
	 
#+BEGIN_LEFT
The Left Behind \\
is a newline.
#+END_LEFT

** Table 
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-table
	 :END:
	 
Row formula:
| Student  | Maths | Physics | Mean |
|----------+-------+---------+------|
| Bertrand |    13 |      09 |   11 |
| Henri    |    15 |      14 |      |
| Arnold   |    17 |      13 |      |
#+TBLFM: @2$4=vmean($2..$3)

Column formula:
| Student  | Maths | Physics | Mean |
|----------+-------+---------+------|
| Bertrand |    13 |      09 |   11 |
| Henri    |    15 |      14 | 14.5 |
| Arnold   |    17 |      13 |   15 |
#+TBLFM: $4=vmean($2..$3)

Row and Column formula:
| Student  | Maths | Physics | Mean | Sum |
|----------+-------+---------+------+-----|
| Bertrand |    13 |      09 |   11 |  22 |
| Henri    |    15 |      14 | 14.5 |  29 |
| Arnold   |    17 |      13 |   15 |  30 |
|----------+-------+---------+------+-----|
| Means    |    15 |      12 | 13.5 |     |
| Sum      |    45 |      36 |      |  81 |
#+TBLFM: $2=vsum(@2$2..@4$2)::$3=vsum(@2$3..@4$3)::$4=vmean($2..$3)::$5=vsum($2..$3)::@5$2=vmean(@2$2..@4$2)::@5$3=vmean(@2$3..@4$3)

** Code
	:PROPERTIES:
	:CUSTOM_ID: scratch-code
	:END:

*** Elisp
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-code-elisp
	 :END:

#+BEGIN_SRC emacs-lisp :exports code
	(list emacs-version (emacs-arch) (emacs-home*))

#+END_SRC

#+RESULTS:
| 27.2 | 64 | /Users/junjie/.emacs.d/ |

*** C
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-code-c
	 :END:

#+BEGIN_SRC C :includes <stdio.h> :main no :flags -O2 :var to = 10
	int
	fibo(int n, int p, int acc)
	{
		if (0 == n)
			{
				return acc;
			}
		return fibo(n-1, acc, acc+p);
	}

	int
	main(void)
	{
		for (int i = 0; i < to; i++)
			{
				int f = fibo(i, 0, 1);
				printf("fibo(%01i) = %04i\n", i, f);
			}
		return 0;
	}
#+END_SRC

#+RESULTS:
| fibo(0) | = |  1 |
| fibo(1) | = |  1 |
| fibo(2) | = |  2 |
| fibo(3) | = |  3 |
| fibo(4) | = |  5 |
| fibo(5) | = |  8 |
| fibo(6) | = | 13 |
| fibo(7) | = | 21 |
| fibo(8) | = | 34 |
| fibo(9) | = | 55 |

** Math
	 :PROPERTIES:
	 :CUSTOM_ID: scratch-math
	 :END:
	 
Another way to notate \({\LaTeX}\).


If $a^2=b$ and \( b=2 \), then the solution must be
either $$ a=+\sqrt{2} $$ or \[ a=-\sqrt{2}. \]


*** Symbol
		:PROPERTIES:
		:CUSTOM_ID: scratch-math-symbol
		:END:
		
**** Greek Characters
		 :PROPERTIES:
		 :CUSTOM_ID: scratch-math-greek-characters
		 :END:
		 
#+NAME: math_greek_characters
| char         | char         | name                |
|--------------+--------------+---------------------|
| \(A\)        | \(\alpha\)   | Alpha (al-fah)      |
| \(B\)        | \(\beta\)    | Beta (bay-tah)      |
| \(\Gamma\)   | \(\gamma\)   | Gamma (gam-ah)      |
| \(\Delta\)   | \(\delta\)   | Delta (del-ta)      |
| \(E\)        | \(\epsilon\) | Epsilon (ep-si-lon) |
| \(Z\)        | \(\zeta\)    | Zeta (zay-tah)      |
| \(H\)        | \(\eta\)     | Eta (ay-tah)        |
| \(\Theta\)   | \(\theta\)   | Theta (thay-tah)    |
| \(I\)        | \(\iota\)    | Iota (eye-o-tah)    |
| \(K\)        | \(\kappa\)   | Kappa (cap-pah)     |
| \(\Lambda\)  | \(\lambda\)  | Lambda (lamb-dah)   |
| \(M\)        | \(\mu\)      | Mu (mew)            |
| \(N\)        | \(\nu\)      | Nu (new)            |
| \(\Xi\)      | \(\xi\)      | Xi (zie)            |
| \(O\)        | \(\omicron\) | Omicron (om-e-cron) |
| \(\Pi\)      | \(\pi\)      | Pi (pie)            |
| \(\Sigma\)   | \(\sigma\)   | Sigma (sig-ma)      |
| \(T\)        | \(\tau\)     | Tau (taw)           |
| \(\Upsilon\) | \(\upsilon\) | Upsilon (up-si-lon) |
| \(\Phi\)     | \(\phi\)     | Phi (fie)           |
| \(X\)        | \(\chi\)     | Chi (kie)           |
| \(\Psi\)     | \(\psi\)     | Psi (sigh)          |
| \(\Omega\)   | \(\omega\)   | Omega (oh-may-gah)  |
|              |              |                     |

**** Operators
		 :PROPERTIES:
		 :CUSTOM_ID: scratch-math-operators
		 :END:

#+NAME: math_operators
| name            | character  | name           | character |
|-----------------+------------+----------------+-----------|
| \(\cdot\)       | cdot       | \(\bullet\)    | bullet    |
| \(\circ\)       | circ       | \(\diamond\)   | diamond   |
| \(\times\)      | times      | \(\div\)       | div       |
| \(\mp\)         | mp         | \(\pm\)        | pm        |
| \(\otimes\)     | otimes     | \(\oplus\)     | oplus     |
| \(\oslash\)     | oslash     | \(\ominus\)    | ominus    |
| \(\asymp\)      | asymp      | \(\equiv\)     | equiv     |
| \(\simeq\)      | simeq      | \(\approx\)    | approx    |
| \(\neq\)        | neq        |                |           |
| \(\geq\)        | geq        | \(\leq\)       | leq       |
| \(\supset\)     | supset     | \(\supseteq\)  | supseteq  |
| \(\subset\)     | subset     | \(\subseteq\)  | subseteq  |
| \(\preceq\)     | preceq     | \(\succeq\)    | succeq    |
| \(\rightarrow\) | rightarrow | \(\leftarrow\) | leftarrow |
